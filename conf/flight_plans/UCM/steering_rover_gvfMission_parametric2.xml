<!DOCTYPE flight_plan SYSTEM "../flight_plan.dtd">

<!-- original -->
<!--flight_plan alt="660" ground_alt="650" lat0="40.450631" lon0="-3.726058" max_dist_from_home="1500" name="Rover Steering" security_height="0.3"-->

<flight_plan alt="660" ground_alt="650" lat0="40.7287" lon0="-3.80558" max_dist_from_home="3500" name="Rover Steering" security_height="0.3">
  <header>

</header>
  <waypoints>
    <waypoint name="HOME" x="0.0" y="0.0"/>
    <waypoint name="STDBY" x="0" y="-4"/>
    <waypoint name="ELLIPSE" x="-3" y="-3"/>
    <waypoint name="P1" x="-2" y="-4"/>
    <waypoint name="P2" x="2" y="-4"/>
    <!--waypoint name="OBJ" x="2" y="-4"/-->
    
    <!-- Spline wps -->
    <waypoint name="SPL0" lat="40.721983"   lon="-3.821789"/>
    <waypoint name="SPL1" lat="40.721983"   lon="-3.821789"/>
    <waypoint name="SPL2" lat="40.721983"   lon="-3.821789"/>
    <waypoint name="SPL3" lat="40.721983"   lon="-3.821789"/>
    <waypoint name="SPL4" lat="40.721983"   lon="-3.821789"/>
    <waypoint name="SPL5" lat="40.721983"   lon="-3.821789"/>
    <waypoint name="SPL6" lat="40.721983"   lon="-3.821789"/>
    <waypoint name="SPL7" lat="40.721983"   lon="-3.821789"/>
    <waypoint name="SPL8" lat="40.721983"   lon="-3.821789"/>
 
    <!-- Sectors waypoints -->
    <waypoint name="_S1" x="3" y="4"/>
    <waypoint name="_S2" x="3" y="-4"/>
    <waypoint name="_S3" x="-3" y="-4"/>
    <waypoint name="_S4" x="-3" y="4"/>
    <waypoint name="_N1" x="4000" y="4000"/>
    <waypoint name="_N2" x="4000" y="-4000"/>
    <waypoint name="_N3" x="-4000" y="-4000"/>
    <waypoint name="_N4" x="-4000" y="4000"/>
  </waypoints>
  
  <sectors>
    <sector name="Net" color="red">
      <corner name="_N1"/>
      <corner name="_N2"/>
      <corner name="_N3"/>
      <corner name="_N4"/>
    </sector>
    
    <!--sector name="Survey" color="green">
      <corner name="_S1"/>
      <corner name="_S2"/>
      <corner name="_S3"/>
      <corner name="_S4"/>
    </sector-->
  </sectors>
  
  <variables>
    <variable var="aa" init="5.0" min="1.0" max="10.0" step="1.0"/>
    <variable var="bb" init="5.0" min="1.0" max="10.0" step="1.0"/>
  </variables>
  
  <modules>
    <module name="gvf_module"/> 
    <module name="gvf_parametric"/>
  </modules>
  
  <blocks>
  
    <block name="Wait GPS" strip_icon="gps.png">
      <call_once fun="NavKillThrottle()"/>
      <while cond="!GpsFixValid()"/>
    </block>

    <block name="Geo init" strip_icon="googleearth.png">
      <while cond="LessThan(NavBlockTime(), 10)"/>
      <call_once fun="NavSetGroundReferenceHere()"/>
      <call_once fun="NavSetAltitudeReferenceHere()"/>
    </block>
    
    <block name="Start Engine" strip_icon="on.png">
      <while cond="LessThan(NavBlockTime(), 1)"/>
      <call_once fun="autopilot_set_motors_on(TRUE)"/>
    </block>
    
    <block name="Standby" strip_button="Standby" strip_icon="home.png">
      <call fun="gvf_ellipse_wp(WP_STDBY, 4, 4, 0)"/>
    </block>
    
    <block name="line_to_HOME" strip_icon="home_drop.png"> 
      <call fun="gvf_segment_XY1_XY2(GetPosX(), GetPosY(), 0.f, 0.f)"/>
      <exception cond="! InsideNet(GetPosX(), GetPosY())" deroute="Standby"/>
    </block>
    
    <block name="ellipse_wp" strip_icon="oval.png">
      <call fun="gvf_ellipse_wp(WP_ELLIPSE, gvf_ellipse_par.a, gvf_ellipse_par.b, gvf_ellipse_par.alpha)"/>
      <exception cond="! InsideNet(GetPosX(), GetPosY())" deroute="Standby"/>
    </block>

    <block name="line_P1_P2" strip_icon="line.png"> 
      <call fun="gvf_line_wp1_wp2(WP_P1, WP_P2)"/>
      <exception cond="! InsideNet(GetPosX(), GetPosY())" deroute="Standby"/>
    </block>
    
    <block name="segment_turn_P1_P2" strip_icon="line.png"> 
      <call fun="gvf_segment_loop_wp1_wp2(WP_P1, WP_P2, gvf_segment_par.d1, gvf_segment_par.d2)"/>
      <exception cond="! InsideNet(GetPosX(), GetPosY())" deroute="Standby"/>
    </block>
    
    <block name="sin_p1_p2" strip_icon="line_drop.png"> 
      <call fun="gvf_sin_wp1_wp2(WP_P1, WP_P2, gvf_sin_par.w, gvf_sin_par.off, gvf_sin_par.A)"/>
      <exception cond="! InsideNet(GetPosX(), GetPosY())" deroute="Standby"/>
    </block>
    
    <!--2D splines. Choose time breaks as desired, depending on them, gvf_parametric w must be adjusted-->
    <block name="gvf_splines">
    	<call fun="gvf_parametric_2D_splines_wp(WP_SPL0, WP_SPL1, WP_SPL2,WP_SPL3,WP_SPL4, WP_SPL5, WP_SPL6, WP_SPL7, WP_SPL8, 0, 10, 20, 30, 40, 50, 60, 70, 80)"/> 
    	<exception cond="! InsideNet(GetPosX(), GetPosY())" deroute="Standby"/>	
    </block>    
    
  </blocks>
</flight_plan>


