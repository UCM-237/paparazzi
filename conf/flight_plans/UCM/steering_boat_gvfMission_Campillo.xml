<!-- Same as Pradolongo, but with the origin in Campillo -->
<!DOCTYPE flight_plan SYSTEM "../flight_plan.dtd">

<flight_plan alt="660" ground_alt="650" lat0="40.3209150" lon0="-3.5100712" max_dist_from_home="1600" name="Campillo Test" security_height="0.3">
  <header>

</header>
  <waypoints>
    <waypoint name="HOME" x="0" y="0"/>
    <waypoint name="STDBY" lat="40.3209437" lon="-3.5096997"/>
    <waypoint name="ELLIPSE" lat="40.3208690" lon="-3.5086590"/>
    <waypoint name="P1" lat="40.3201290" lon="-3.5091919"/>
    <waypoint name="P2" lat="40.3215860" lon="-3.5092290"/>
    <waypoint name="BZ0" x="240.0" y="-60.0"/>
    <waypoint name="BZ1" x="223.7" y="-32.3"/>
    <waypoint name="BZ2" x="180.5" y="-28.0"/>
    <waypoint name="BZ3" x="165.3" y="-46.5"/>
    <waypoint name="BZ4" x="138.0" y="-79.3"/>
    <waypoint name="BZ5" x="116.6" y="-83.6"/>
    <waypoint name="BZ6" x="95.8" y="-86.9"/>
    <waypoint name="BZ7" x="77.2" y="-77.3"/>
    <waypoint name="BZ8" x="75.7" y="-59.7"/>
    <waypoint name="BZ9" x="44.9" y="-66.1"/>
    <waypoint name="BZ10" x="55.7" y="-97.0"/>
    <waypoint name="BZ11" x="83.8" y="-112.3"/>
    <waypoint name="_S1" x="3" y="4"/>
    <waypoint name="_S2" x="3" y="-4"/>
    <waypoint name="_S3" x="-3" y="-4"/>
    <waypoint name="_S4" x="-3" y="4"/>
    <waypoint name="_N1" x="796.4" y="1254.9"/>
    <waypoint name="_N2" x="796.4" y="-865.4"/>
    <waypoint name="_N3" x="-908.7" y="-865.4"/>
    <waypoint name="_N4" x="-908.7" y="1254.9"/>
    <waypoint name="L0" lat="40.3209449" lon="-3.5094740"/>
    <waypoint name="L1" lat="40.3209689" lon="-3.5078862"/>
    <waypoint name="L2" lat="40.3209666" lon="-3.5077648"/>
    <waypoint name="L3" lat="40.3209674" lon="-3.5076630"/>
    <waypoint name="L4" lat="40.3209661" lon="-3.5075641"/>
    <waypoint name="L5" lat="40.3209695" lon="-3.5074385"/>
    <waypoint name="L6" lat="40.3209693" lon="-3.5073186"/>
    <!-- sonda -->
    <waypoint name="_P1" x="6000" y="200"/>
  </waypoints>
  <sectors>
    <sector color="red" name="Net">
      <corner name="_N1"/>
      <corner name="_N2"/>
      <corner name="_N3"/>
      <corner name="_N4"/>
    </sector>
  </sectors>
  <variables>
    <variable init="5.0" max="20.0" min="1.0" step="1.0" var="a_stb"/>
    <variable init="5.0" max="20.0" min="1.0" step="1.0" var="b_stb"/>
  </variables>
  <blocks>
    <block name="Wait GPS" strip_icon="gps.png">
      <call_once fun="NavKillThrottle()"/>
      <while cond="!GpsFixValid()"/>
    </block>
    <block name="Geo init" strip_icon="googleearth.png">
      <while cond="LessThan(NavBlockTime(), 10)"/>
      <call_once fun="NavSetGroundReferenceHere()"/>
      <call_once fun="NavSetAltitudeReferenceHere()"/>
    </block>
    <block name="Start Engine" strip_icon="on.png">
      <while cond="LessThan(NavBlockTime(), 1)"/>
      <call_once fun="autopilot_set_motors_on(TRUE)"/>
    </block>
    <block name="Standby" strip_button="Standby" strip_icon="home.png">
      <call fun="gvf_ellipse_wp(WP_STDBY, a_stb, b_stb, 0)"/>
    </block>
    <block name="line_to_HOME" strip_icon="home_drop.png">
      <call fun="gvf_segment_XY1_XY2(GetPosX(), GetPosY(), 0.f, 0.f)"/>
      <exception cond="! InsideNet(GetPosX(), GetPosY())" deroute="Standby"/>
    </block>
    <block name="ellipse_wp" strip_icon="oval.png">
      <call fun="gvf_ellipse_wp(WP_ELLIPSE, gvf_ellipse_par.a, gvf_ellipse_par.b, gvf_ellipse_par.alpha)"/>
      <exception cond="! InsideNet(GetPosX(), GetPosY())" deroute="Standby"/>
      <exception cond="(12.1 > PowerVoltage()) @AND (GpsFixValid())" deroute="line_to_HOME"/>
    </block>
    <block name="line_P1_P2" strip_icon="line.png">
      <call fun="gvf_line_wp1_wp2(WP_P1, WP_P2)"/>
      <exception cond="! InsideNet(GetPosX(), GetPosY())" deroute="Standby"/>
    </block>
    <block name="segment_turn_P1_P2" strip_icon="line.png">
      <call fun="gvf_segment_loop_wp1_wp2(WP_P1, WP_P2, gvf_segment_par.d1, gvf_segment_par.d2)"/>
      <exception cond="! InsideNet(GetPosX(), GetPosY())" deroute="Standby"/>
    </block>
    <block name="sin_p1_p2" strip_icon="line_drop.png">
      <call fun="gvf_sin_wp1_wp2(WP_P1, WP_P2, gvf_sin_par.w, gvf_sin_par.off, gvf_sin_par.A)"/>
      <exception cond="! InsideNet(GetPosX(), GetPosY())" deroute="Standby"/>
    </block>
    <block name="line_array" strip_icon="line.png">
      <call fun="gvf_lines_array_wp_v2(WP_L0, WP_L1, WP_L2, WP_L3, WP_L4, WP_L5, WP_L6, gvf_segment_par.d1, gvf_segment_par.d2)"/>
      <exception cond="! InsideNet(GetPosX(), GetPosY())" deroute="Standby"/>
    </block>
    <block name="gvf_bezier_bare">
      <call fun="gvf_parametric_bare_2D_bezier_wp(WP_BZ0)"/>
      <exception cond="! InsideNet(GetPosX(), GetPosY())" deroute="Standby"/>
    </block>
    <block name="gvf_quintic_bezier_bare">
      <set var="gvf_c_stopwp.stay_still" value="0"/>
      <call fun="gvf_parametric_bare_2D_quintic_bezier_wp(WP_BZ0)"/>
      <exception cond="dist(GetPosX(), GetPosY(), WP_BZ0) @LT gvf_c_stopwp.distance_stop" deroute="static_control"/>
      <exception cond="! InsideNet(GetPosX(), GetPosY())" deroute="Standby"/>
    </block>
    <block name="static_control">
      <set var="gvf_c_stopwp.stay_still" value="1"/>
      <call_once fun=" increase_bz_pointer()"/>
      <call fun="boat_guidance_bearing_static_ctrl()"/>
      <exception cond="! InsideNet(GetPosX(), GetPosY())" deroute="Standby"/>
      <exception cond="! LessThan(NavBlockTime(), gvf_c_stopwp.wait_time)"deroute="gvf_quintic_bezier_bare"/>
    </block>


    <!-- ########################## TEST SONDA ############################ -->
    <block name="Mision_Prueba_Sonda">
      <go wp="P1"/>
      <call_once fun="send_measure_msg(WP__P1)"/>

      <while cond="serial_response == 0">
          <stay wp="P1"/>
      </while>

      <go wp="P2"/>
    </block>

  </blocks>
</flight_plan>
