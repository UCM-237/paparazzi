<!DOCTYPE flight_plan SYSTEM "../flight_plan.dtd">

<flight_plan alt="660" ground_alt="650" lat0="39.78917" lon0="-4.08694" max_dist_from_home="1600" name="Rover Steering" security_height="0.3">
  <header>

</header>
  <waypoints>
    <waypoint name="HOME" x="0" y="0"/>
    <waypoint name="STDBY" x="333.9" y="620.6"/>
    <waypoint name="ELLIPSE" x="296.3" y="624.4"/>
    <waypoint name="P1" x="-2" y="-4"/>
    <waypoint name="P2" x="2" y="-4"/>
    <waypoint lat="39.793761" lon="-4.080206" name="BZ0"/> <!-- wP/-->
    <waypoint lat="39.793760" lon="-4.080454" name="BZ1"/>
    <waypoint lat="39.793745" lon="-4.080709" name="BZ2"/>
    <waypoint lat="39.793726" lon="-4.080905" name="BZ3"/>
    <waypoint lat="39.793678" lon="-4.081133" name="BZ4"/> <!-- wP/-->
    <waypoint lat="39.793650" lon="-4.081371" name="BZ5"/>
    <waypoint lat="39.793591" lon="-4.081581" name="BZ6"/>
    <waypoint lat="39.793545" lon="-4.081822" name="BZ7"/> <!-- wP/-->
    <waypoint lat="39.793489" lon="-4.082091" name="BZ8"/>
    <waypoint lat="39.793439" lon="-4.082265" name="BZ9"/>
    <waypoint lat="39.793408" lon="-4.082458" name="BZ10"/>
    <waypoint lat="39.793370" lon="-4.082713" name="BZ11"/> <!-- wP/-->
    <waypoint name="_S1" x="3" y="4"/>
    <waypoint name="_S2" x="3" y="-4"/>
    <waypoint name="_S3" x="-3" y="-4"/>
    <waypoint name="_S4" x="-3" y="4"/>
    <waypoint name="_N1" x="796.4" y="1254.9"/>
    <waypoint name="_N2" x="796.4" y="-865.4"/>
    <waypoint name="_N3" x="-908.7" y="-865.4"/>
    <waypoint name="_N4" x="-908.7" y="1254.9"/>
    <waypoint name="L0" x="262.4" y="624.2"/>
    <waypoint name="L1" x="105.3" y="651.0"/>
    <waypoint name="L2" x="-115.1" y="610.7"/>
    <waypoint name="L3" x="303.6" y="654.2"/>
    <waypoint name="L4" x="302.6" y="655.0"/>
    <waypoint name="L5" x="301.5" y="656.3"/>
    <waypoint name="L6" x="303.2" y="654.8"/>
    <!-- sonda -->
    <waypoint name="_P1" x="6000" y="200"/>
  </waypoints>
  <sectors>
    <sector color="red" name="Net">
      <corner name="_N1"/>
      <corner name="_N2"/>
      <corner name="_N3"/>
      <corner name="_N4"/>
    </sector>
  </sectors>
  <variables>
    <variable init="5.0" max="20.0" min="1.0" step="1.0" var="a_stb"/>
    <variable init="5.0" max="20.0" min="1.0" step="1.0" var="b_stb"/>
  </variables>
  <blocks>
    <block name="Wait GPS" strip_icon="gps.png">
      <call_once fun="NavKillThrottle()"/>
      <while cond="!GpsFixValid()"/>
    </block>
    <block name="Geo init" strip_icon="googleearth.png">
      <while cond="LessThan(NavBlockTime(), 10)"/>
      <call_once fun="NavSetGroundReferenceHere()"/>
      <call_once fun="NavSetAltitudeReferenceHere()"/>
    </block>
    <block name="Start Engine" strip_icon="on.png">
      <while cond="LessThan(NavBlockTime(), 1)"/>
      <call_once fun="autopilot_set_motors_on(TRUE)"/>
    </block>
    <block name="Standby" strip_button="Standby" strip_icon="home.png">
      <call fun="gvf_ellipse_wp(WP_STDBY, a_stb, b_stb, 0)"/>
    </block>
    <block name="line_to_HOME" strip_icon="home_drop.png">
      <call fun="gvf_segment_XY1_XY2(GetPosX(), GetPosY(), 0.f, 0.f)"/>
      <exception cond="! InsideNet(GetPosX(), GetPosY())" deroute="Standby"/>
    </block>
    <block name="ellipse_wp" strip_icon="oval.png">
      <call fun="gvf_ellipse_wp(WP_ELLIPSE, gvf_ellipse_par.a, gvf_ellipse_par.b, gvf_ellipse_par.alpha)"/>
      <exception cond="! InsideNet(GetPosX(), GetPosY())" deroute="Standby"/>
      <exception cond="(12.1 > PowerVoltage()) @AND (GpsFixValid())" deroute="line_to_HOME"/>
    </block>
    <block name="line_P1_P2" strip_icon="line.png">
      <call fun="gvf_line_wp1_wp2(WP_P1, WP_P2)"/>
      <exception cond="! InsideNet(GetPosX(), GetPosY())" deroute="Standby"/>
    </block>
    <block name="segment_turn_P1_P2" strip_icon="line.png">
      <call fun="gvf_segment_loop_wp1_wp2(WP_P1, WP_P2, gvf_segment_par.d1, gvf_segment_par.d2)"/>
      <exception cond="! InsideNet(GetPosX(), GetPosY())" deroute="Standby"/>
    </block>
    <block name="sin_p1_p2" strip_icon="line_drop.png">
      <call fun="gvf_sin_wp1_wp2(WP_P1, WP_P2, gvf_sin_par.w, gvf_sin_par.off, gvf_sin_par.A)"/>
      <exception cond="! InsideNet(GetPosX(), GetPosY())" deroute="Standby"/>
    </block>
    <block name="line_array" strip_icon="line.png">
      <call fun="gvf_lines_array_wp_v2(WP_L0, WP_L1, WP_L2, WP_L3, WP_L4, WP_L5, WP_L6, gvf_segment_par.d1, gvf_segment_par.d2)"/>
       <exception cond="dist_bool(GetPosX(), GetPosY(), WP_BZ0)" deroute="static_control"/>
       <exception cond="! InsideNet(GetPosX(), GetPosY())" deroute="Standby"/>

    </block>
    <block name="gvf_bezier_bare">
      <call fun="gvf_parametric_bare_2D_bezier_wp(WP_BZ0)"/>
      <exception cond="! InsideNet(GetPosX(), GetPosY())" deroute="Standby"/>
    </block>
    <block name="gvf_quintic_bezier_bare">
      <call fun="gvf_parametric_bare_2D_quintic_bezier_wp(WP_BZ0)"/>
      <exception cond="! InsideNet(GetPosX(), GetPosY())" deroute="Standby"/>
    </block>
    <block name="static_control">
      <call fun="boat_guidance_bearing_static_ctrl()"/>
      <exception cond="! InsideNet(GetPosX(), GetPosY())" deroute="Standby"/>
      <exception cond="! LessThan(NavBlockTime(), gvf_c_stopwp.wait_time)"deroute="line_array"/>
    </block>

    <block name = "go">
      <go wp="P1"/>
    </block>

    <!-- ########################## TEST SONDA ############################ 
    <block name="Mision_Prueba_Sonda">
      <go wp="P1"/>
      <call_once fun="send_measure_msg(WP__P1)"/>

      <while cond="serial_response == 0">
          <stay wp="P1"/>
      </while>

      <go wp="P2"/>
    </block>
-->
  </blocks>
</flight_plan>
